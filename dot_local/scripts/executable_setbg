#!/bin/bash

#
# This script is used to change the background to a new one.
# If given a file, sets it and adds it in the wallpapers folder. Otherwise, choose a random one.
#
# Note: Chooses a random monitor between all the active ones.
#
# export DISPLAY=:0
# TMP_XAUTHORITY=$(mktemp)
# cp "$XAUTHORITY" "$TMP_XAUTHORITY"

# Set the XAUTHORITY variable to point to the temporary copy
# export XAUTHORITY="$TMP_XAUTHORITY"

# export XAUTHORITY=$(xauth info | grep -oP '(?<=Authority file: ).*')

# echo "val: $XAUTHORITY"
# XAUTHORITY=$(xauth info | grep -oP '(?<=Authority file: ).*')
# echo "val12: $XAUTHORITY"
# echo "Here"
# xauth info
# echo "laa"

XAUTHORITY_PATH=$(find /tmp -maxdepth 1 -name 'xauth_*' -print -quit)

if [ -n "$XAUTHORITY_PATH" ]; then
    export XAUTHORITY="$XAUTHORITY_PATH"
else
    echo "Xauthority file not found."
    exit 1
fi

# Path to the wallpapers
folder="/home/fanikulapo/.local/share/wallpapers/"

# If given an existing file in argument, add it to the wallpaper folder and we'll use this one.
if [ -f "$1" ] && [ ! -f "${folder}${1}" ]
then
  cp "$1" "$folder" && notify-send -i "$1" "Wallpaper added."
  to_display=$1
else
  # Else if no (or invalid) file given, choose a random one
  to_display=$(find "$folder" -type f | shuf -n 1)
fi

# Choose a random monitor to change the wallpaper only on that one
monitor=$(xrandr --listactivemonitors | grep '^ [[:digit:]]' | awk '{print $NF}' | shuf -n 1)

# Update the wallpaper on the selected monitor
xwallpaper --output "$monitor" --maximize $to_display

# Save current file name for potential removal
# TODO: Handle multiple monitor ?
echo "$to_display" > /home/fanikulapo/.local/scripts/.currentbg

# rm "$TMP_XAUTHORITY"

# Exit
exit 0
